{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vusa/Portfolio/Rental-Property-App/components/AutoComplete.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport { useState, useEffect, useContext } from \"react\";\nimport fetch from \"cross-fetch\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nexport default function MAutocomplete(props) {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      options = _React$useState4[0],\n      setOptions = _React$useState4[1];\n\n  var loading = open && options.length === 0;\n\n  var _useState = useState(\"\"),\n      selectedLocation = _useState[0],\n      setSelectedLocation = _useState[1];\n\n  var _useState2 = useState({}),\n      selectedObject = _useState2[0],\n      setSelectedObject = _useState2[1];\n\n  var url = \"http://localhost:1337/property-overviews?street_address_contains=\".concat(selectedLocation, \"&_limit=10\");\n  React.useEffect(function () {\n    var active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, properties, arr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              properties = _context.sent;\n              arr = properties.map(function (p) {\n                return p;\n              });\n\n              if (active) {\n                setOptions(arr);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      active = false;\n    };\n  }, [selectedLocation, loading]);\n  React.useEffect(function () {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  function handleChange(event, value) {\n    var convertedLocation = value.toString();\n    setSelectedLocation(convertedLocation);\n    var obj = options.filter(function (o) {\n      return o.street_address === convertedLocation;\n    })[0];\n    setSelectedObject(obj);\n    parent(obj);\n  }\n\n  function parent(obj) {\n    props.setSelectedObject(obj);\n  }\n\n  return __jsx(Autocomplete, {\n    onInputChange: handleChange,\n    id: \"asynchronous-demo\",\n    style: {\n      width: \"100%\"\n    },\n    open: open,\n    onOpen: function onOpen() {\n      setOpen(true);\n    },\n    onClose: function onClose() {\n      setOpen(false);\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.street_address === value.street_address;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.street_address;\n    },\n    options: options,\n    loading: loading,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Enter Address\",\n        variant: \"outlined\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }\n          }, loading ? __jsx(CircularProgress, {\n            color: \"inherit\",\n            size: 20,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }\n          }) : null, params.InputProps.endAdornment)\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(MAutocomplete, \"Cn/N6CXJZcpCsNo3XNF780xnGiY=\");\n\n_c = MAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"MAutocomplete\");","map":{"version":3,"sources":["/Users/vusa/Portfolio/Rental-Property-App/components/AutoComplete.js"],"names":["useState","useEffect","useContext","fetch","React","TextField","Autocomplete","CircularProgress","MAutocomplete","props","open","setOpen","options","setOptions","loading","length","selectedLocation","setSelectedLocation","selectedObject","setSelectedObject","url","active","undefined","response","json","properties","arr","map","p","handleChange","event","value","convertedLocation","toString","obj","filter","o","street_address","parent","width","option","params","InputProps","endAdornment"],"mappings":"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","sourcesContent":["// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport { useState, useEffect, useContext } from \"react\";\nimport fetch from \"cross-fetch\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function MAutocomplete(props) {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n  const [selectedObject, setSelectedObject] = useState({});\n\n  var url = `http://localhost:1337/property-overviews?street_address_contains=${selectedLocation}&_limit=10`;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(url);\n      const properties = await response.json();\n\n      const arr = properties.map((p) => p);\n      if (active) {\n        setOptions(arr);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [selectedLocation, loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  function handleChange(event, value) {\n    const convertedLocation = value.toString();\n    setSelectedLocation(convertedLocation);\n    const obj = options.filter((o) => {\n      return o.street_address === convertedLocation;\n    })[0];\n    setSelectedObject(obj);\n    parent(obj);\n  }\n\n  function parent(obj) {\n    props.setSelectedObject(obj);\n  }\n\n  return (\n    <Autocomplete\n      onInputChange={handleChange}\n      id=\"asynchronous-demo\"\n      style={{ width: \"100%\" }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) =>\n        option.street_address === value.street_address\n      }\n      getOptionLabel={(option) => option.street_address}\n      options={options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Enter Address\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}