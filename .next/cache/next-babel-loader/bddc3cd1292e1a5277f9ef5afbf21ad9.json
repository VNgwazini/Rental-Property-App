{"ast":null,"code":"var _jsxFileName = \"/home/vusa/Portfolio/Rental-Property-App/pages/login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport StateContext from \"./StateContext\";\nimport DispatchContext from \"./DispatchContext\";\nimport CNavbar, { CNavbarBlue } from \"../components/NavbarHome\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"react-bootstrap\";\nimport { useState, useContext } from \"react\";\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"Must be 20 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nexport default function Login() {\n  _s();\n\n  var appState = useContext(StateContext);\n  var appDispatch = useContext(DispatchContext);\n  var host = \"http://64.227.1.199/\";\n\n  var _useState = useState(),\n      identifier = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      loginFailed = _useState3[0],\n      setLoginFailed = _useState3[1];\n\n  var loginFailedMsg = \"Unable to login. Please check your email or password\";\n  var formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: validate,\n    onSubmit: function onSubmit(values) {\n      axios.post(\"/auth/local\", {\n        identifier: values.email,\n        password: values.password\n      }).then(function (response) {\n        appDispatch({\n          type: \"login\",\n          data: response.data.user,\n          token: response.data.jwt\n        });\n      })[\"catch\"](function (error) {\n        // Handle error.\n        console.log(\"An error occurred:\", error.response);\n        setLoginFailed(true);\n        appDispatch({\n          type: \"logout\"\n        });\n      });\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(CNavbarBlue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(\"section\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    className: \"pt-5 col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), __jsx(Form, {\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, formik.errors.email ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 36\n    }\n  }, formik.errors.email) : null, formik.errors.loggedIn ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, formik.errors.loggedIn) : null, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email\",\n    id: \"email\",\n    name: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur //onChange={(e) => setEmail(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), formik.errors.password ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, formik.errors.password) : null, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    id: \"password\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur //onChange={(e) => setPassword(e.target.value)}\n    ,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })), loginFailed ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 28\n    }\n  }, loginFailedMsg) : null, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Login\"), \" \", __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Or log in with:\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    block: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Google\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    block: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Facebook\")))));\n}\n\n_s(Login, \"3cH/OcANUURtVrkb3acTrwaSWWg=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vusa/Portfolio/Rental-Property-App/pages/login.js"],"names":["axios","useFormik","StateContext","DispatchContext","CNavbar","CNavbarBlue","Container","Row","Col","Form","FormGroup","Button","useState","useContext","validate","values","errors","password","length","email","test","Login","appState","appDispatch","host","identifier","setEmail","setPassword","loginFailed","setLoginFailed","loginFailedMsg","formik","initialValues","onSubmit","post","then","response","type","data","user","token","jwt","error","console","log","loggedIn","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport StateContext from \"./StateContext\";\nimport DispatchContext from \"./DispatchContext\";\nimport CNavbar, { CNavbarBlue } from \"../components/NavbarHome\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"react-bootstrap\";\nimport { useState, useContext } from \"react\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"Must be 20 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nexport default function Login() {\n  const appState = useContext(StateContext);\n  const appDispatch = useContext(DispatchContext);\n\n  const host = \"http://64.227.1.199/\";\n  const [identifier, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loginFailed, setLoginFailed] = useState(false);\n  const loginFailedMsg = \"Unable to login. Please check your email or password\";\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      axios\n        .post(\"/auth/local\", {\n          identifier: values.email,\n          password: values.password,\n        })\n        .then((response) => {\n          appDispatch({\n            type: \"login\",\n            data: response.data.user,\n            token: response.data.jwt,\n          });\n        })\n        .catch((error) => {\n          // Handle error.\n          console.log(\"An error occurred:\", error.response);\n          setLoginFailed(true);\n          appDispatch({\n            type: \"logout\",\n          });\n        });\n    },\n  });\n\n  return (\n    <>\n      <CNavbarBlue />\n      <section className=\"mt-5\">\n        <Container className=\"pt-5 col-lg-4\">\n          <header>\n            <h1>Login</h1>\n\n            <p></p>\n          </header>\n\n          <Form noValidate>\n            {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n            {formik.errors.loggedIn ? (\n              <div>{formik.errors.loggedIn}</div>\n            ) : null}\n            <Form.Group>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                id=\"email\"\n                name=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                //onChange={(e) => setEmail(e.target.value)}\n              />\n              <br />\n              {formik.errors.password ? (\n                <div>{formik.errors.password}</div>\n              ) : null}\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                id=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                //onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </Form.Group>\n            {loginFailed ? <div>{loginFailedMsg}</div> : null}\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={formik.handleSubmit}\n            >\n              Login\n            </Button>{\" \"}\n            <p>Or log in with:</p>\n            <Button variant=\"outline-primary\" block disabled>\n              Google\n            </Button>\n            <Button variant=\"outline-primary\" block disabled>\n              Facebook\n            </Button>\n          </Form>\n        </Container>\n      </section>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}