{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/vusa/Portfolio/Rental-Property-App/pages/signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useFormik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Router from \"next/router\";\nimport CNavbar, { CNavbarBlue } from \"../components/NavbarHome\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"react-bootstrap\";\nimport { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StateContext from \"./StateContext\";\nimport DispatchContext from \"./DispatchContext\";\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.password) {\n    errors.password = \"Password required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"Must be 20 characters or less\";\n  }\n\n  if (!values.fullname) {\n    errors.fullname = \"Name required\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nexport default function Signup() {\n  _s();\n\n  var appState = useContext(StateContext);\n  var appDispatch = useContext(DispatchContext);\n  var router = useRouter();\n\n  var _useState = useState(),\n      fullname = _useState[0],\n      setFullname = _useState[1];\n\n  var _useState2 = useState(),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(\"tenant\"),\n      userType = _useState4[0],\n      setUserType = _useState4[1];\n\n  var _useState5 = useState(false),\n      tenantChecked = _useState5[0],\n      setTenantChecked = _useState5[1];\n\n  var _useState6 = useState(false),\n      propertyManagerChecked = _useState6[0],\n      setPropertyManagerChecked = _useState6[1];\n\n  var _useState7 = useState(false),\n      ownerChecked = _useState7[0],\n      setOwnerChecked = _useState7[1];\n\n  var _useState8 = useState(0),\n      landlord = _useState8[0],\n      setLandlord = _useState8[1];\n\n  var _useState9 = useState(\"tenant\"),\n      radioState = _useState9[0],\n      setRadioState = _useState9[1];\n\n  var _useState10 = useState(false),\n      createAccFailed = _useState10[0],\n      setCreateAccFailed = _useState10[1];\n\n  var formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      fullname: \"\"\n    },\n    validate: validate,\n    onSubmit: function onSubmit(values) {\n      handleSubmit(values);\n    }\n  }); // get value of radio buttons\n\n  function handleCheckboxes(e) {\n    setRadioState(e.target.value);\n  } // monitor selection of radiobutton and use it update user type\n\n\n  useEffect(function () {\n    radioState == \"\" ? setUserType(\"tenant\") : setUserType(radioState);\n    return;\n  }, [radioState]); // monitor to see if landlord/pro is selected via odd number\n\n  useEffect(function () {\n    if (landlord % 2 == 0) {\n      setUserType(\"tenant\");\n    }\n\n    return;\n  }, [landlord]);\n\n  function handleLandlord() {\n    setLandlord(landlord + 1);\n  }\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var response, pageState;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(\"auth/local/register\", {\n                fullname: values.fullname,\n                email: values.email,\n                password: values.password,\n                username: values.email,\n                type: userType\n              });\n\n            case 3:\n              response = _context.sent;\n              appDispatch({\n                type: \"login\",\n                data: response.data.user,\n                token: response.data.jwt\n              });\n              pageState = axios.post(\"onboarding-states\", {\n                headers: {\n                  Authorization: \"Bearer \" + appState.token\n                },\n                user: response.data.user.id,\n                route: router.route\n              })[\"catch\"](function (err) {\n                console.log(err);\n              });\n              Router.push(\"tenant/add_properties\"); //TODO first check if create account was successful, then check if create account was for tenant\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              Router.push(\"tenant/add_properties\"); //console.log(\"An error occurred:\", error.response);\n\n              if (_context.t0.response) {\n                setCreateAccFailed(_context.t0.response.data.message[0][\"messages\"][0].message);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(CNavbarBlue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), __jsx(\"section\", {\n    className: \"mt-5 pt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Create Account\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"You've worked hard to become a renter any landlord would want. Now, they\\u2019ll know it and compete to make you want them too.\")), createAccFailed ? __jsx(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, createAccFailed) : null, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, formik.errors.fullname ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, formik.errors.fullname) : null, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Fullname\",\n    name: \"fullname\",\n    id: \"fullname\",\n    value: formik.values.fullname,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), formik.errors.email ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 38\n    }\n  }, formik.errors.email) : null, __jsx(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    id: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }), formik.errors.password ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, formik.errors.password) : null, __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"I\\u2019m a landlord or property professional\",\n    onChange: handleLandlord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: landlord % 2 != 0 ? \"\" : \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    sm: {\n      span: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Check, {\n    id: \"owner\",\n    type: \"radio\",\n    label: \"Owner\",\n    name: \"user_type\",\n    value: \"owner\",\n    onChange: handleCheckboxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }), __jsx(Form.Check, {\n    type: \"radio\",\n    id: \"property_manager\",\n    label: \"Property Manager\",\n    name: \"user_type\",\n    value: \"property_manager\",\n    onChange: handleCheckboxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }), __jsx(Form.Check, {\n    type: \"radio\",\n    id: \"agent\",\n    label: \"Agent\",\n    name: \"user_type\",\n    value: \"agent\",\n    onChange: handleCheckboxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  })))), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: formik.handleSubmit,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"Create Account\"), \" \", __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Or log in with:\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    disabled: true,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Google\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    disabled: true,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Facebook\")))));\n}\n\n_s(Signup, \"ao7ImmcCW76BxNLoNT+ptMU1Jts=\", false, function () {\n  return [useRouter, useFormik];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/vusa/Portfolio/Rental-Property-App/pages/signup.js"],"names":["useFormik","useRouter","Alert","Router","CNavbar","CNavbarBlue","Container","Row","Col","Form","FormGroup","Button","useState","useContext","useEffect","axios","StateContext","DispatchContext","validate","values","errors","password","length","fullname","email","test","Signup","appState","appDispatch","router","setFullname","setEmail","setPassword","userType","setUserType","tenantChecked","setTenantChecked","propertyManagerChecked","setPropertyManagerChecked","ownerChecked","setOwnerChecked","landlord","setLandlord","radioState","setRadioState","createAccFailed","setCreateAccFailed","formik","initialValues","onSubmit","handleSubmit","handleCheckboxes","e","target","value","handleLandlord","post","username","type","response","data","user","token","jwt","pageState","headers","Authorization","id","route","err","console","log","push","message","handleChange","handleBlur","span"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Router from \"next/router\";\nimport CNavbar, { CNavbarBlue } from \"../components/NavbarHome\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"react-bootstrap\";\nimport { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport StateContext from \"./StateContext\";\nimport DispatchContext from \"./DispatchContext\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.password) {\n    errors.password = \"Password required\";\n  } else if (values.password.length > 20) {\n    errors.password = \"Must be 20 characters or less\";\n  }\n\n  if (!values.fullname) {\n    errors.fullname = \"Name required\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nexport default function Signup() {\n  const appState = useContext(StateContext);\n  const appDispatch = useContext(DispatchContext);\n  const router = useRouter();\n  const [fullname, setFullname] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [userType, setUserType] = useState(\"tenant\");\n  const [tenantChecked, setTenantChecked] = useState(false);\n  const [propertyManagerChecked, setPropertyManagerChecked] = useState(false);\n  const [ownerChecked, setOwnerChecked] = useState(false);\n  const [landlord, setLandlord] = useState(0);\n  const [radioState, setRadioState] = useState(\"tenant\");\n\n  const [createAccFailed, setCreateAccFailed] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      fullname: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      handleSubmit(values);\n    },\n  });\n\n  // get value of radio buttons\n  function handleCheckboxes(e) {\n    setRadioState(e.target.value);\n  }\n\n  // monitor selection of radiobutton and use it update user type\n  useEffect(() => {\n    radioState == \"\" ? setUserType(\"tenant\") : setUserType(radioState);\n    return;\n  }, [radioState]);\n\n  // monitor to see if landlord/pro is selected via odd number\n  useEffect(() => {\n    if (landlord % 2 == 0) {\n      setUserType(\"tenant\");\n    }\n    return;\n  }, [landlord]);\n\n  function handleLandlord() {\n    setLandlord(landlord + 1);\n  }\n\n  const handleSubmit = async (values) => {\n    try {\n      const response = await axios.post(\"auth/local/register\", {\n        fullname: values.fullname,\n        email: values.email,\n        password: values.password,\n        username: values.email,\n        type: userType,\n      });\n      appDispatch({\n        type: \"login\",\n        data: response.data.user,\n        token: response.data.jwt,\n      });\n      const pageState = axios\n        .post(\"onboarding-states\", {\n          headers: {\n            Authorization: \"Bearer \" + appState.token,\n          },\n          user: response.data.user.id,\n          route: router.route,\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      Router.push(\"tenant/add_properties\");\n      //TODO first check if create account was successful, then check if create account was for tenant\n    } catch (error) {\n      Router.push(\"tenant/add_properties\");\n      //console.log(\"An error occurred:\", error.response);\n      if (error.response) {\n        setCreateAccFailed(\n          error.response.data.message[0][\"messages\"][0].message\n        );\n      }\n    }\n  }\n  return (\n    <>\n      <CNavbarBlue />\n      <section className=\"mt-5 pt-5\">\n        <Container className=\"col-lg-4\">\n          <header>\n            <h1>Create Account</h1>\n\n            <p>\n              You've worked hard to become a renter any landlord would want.\n              Now, they’ll know it and compete to make you want them too.\n            </p>\n          </header>\n          {createAccFailed ? (\n            <Alert variant=\"danger\">{createAccFailed}</Alert>\n          ) : null}\n          <Form>\n            <Form.Group>\n              {formik.errors.fullname ? (\n                <div>{formik.errors.fullname}</div>\n              ) : null}\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Fullname\"\n                name=\"fullname\"\n                id=\"fullname\"\n                value={formik.values.fullname}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n              <br />\n              {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                id=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n              <br />\n              {formik.errors.password ? (\n                <div>{formik.errors.password}</div>\n              ) : null}\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"I’m a landlord or property professional\"\n                onChange={handleLandlord}\n              />\n            </Form.Group>\n            <div className={landlord % 2 != 0 ? \"\" : \"d-none\"}>\n              <Form.Group as={Row} controlId=\"formHorizontalCheck\">\n                <Col sm={{ span: 10 }}>\n                  <Form.Check\n                    id=\"owner\"\n                    type=\"radio\"\n                    label=\"Owner\"\n                    name=\"user_type\"\n                    value=\"owner\"\n                    onChange={handleCheckboxes}\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    id=\"property_manager\"\n                    label=\"Property Manager\"\n                    name=\"user_type\"\n                    value=\"property_manager\"\n                    onChange={handleCheckboxes}\n                  />\n                  <Form.Check\n                    type=\"radio\"\n                    id=\"agent\"\n                    label=\"Agent\"\n                    name=\"user_type\"\n                    value=\"agent\"\n                    onChange={handleCheckboxes}\n                  />\n                </Col>\n              </Form.Group>\n            </div>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={formik.handleSubmit}\n              block\n            >\n              Create Account\n            </Button>{\" \"}\n            <p>Or log in with:</p>\n            <Button variant=\"outline-primary\" disabled block>\n              Google\n            </Button>\n            <Button variant=\"outline-primary\" disabled block>\n              Facebook\n            </Button>\n          </Form>\n        </Container>\n      </section>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}