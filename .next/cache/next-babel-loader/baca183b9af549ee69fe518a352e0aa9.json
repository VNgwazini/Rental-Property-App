{"ast":null,"code":"var _jsxFileName = \"/Users/vusa/Portfolio/Rental-Property-App/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { useImmerReducer } from \"use-immer\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"lato-font/css/lato-font.min.css\";\nimport \"../styles/main.css\";\nimport StateContext from \"./StateContext\";\nimport DispatchContext from \"./DispatchContext\";\naxios.defaults.baseURL = process.env.BACKENDURL || \"http://localhost:1337/\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: storageItem,\n    1: setStorageItem\n  } = useState(\"\");\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    setStorageItem(isLoggedIn);\n  }, []);\n  const initialState = {\n    loggedIn: storageItem,\n    isSearchOpen: false,\n    isChatOpen: false,\n    unreadChatCount: 0,\n    serverStateID: null\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case \"login\":\n        draft.loggedIn = true;\n        localStorage.setItem(\"loggedIn\", draft.loggedIn);\n        draft.user = action.data;\n        localStorage.setItem(\"user\", draft.user);\n        draft.token = action.token;\n        localStorage.setItem(\"token\", draft.token);\n        draft.userID = action.userID;\n        localStorage.setItem(\"userID\", draft.userID);\n        return;\n\n      case \"logout\":\n        draft.loggedIn = false;\n        localStorage.removeItem(\"loggedIn\");\n        return;\n\n      case \"serverStateID\":\n        draft.serverStateID = action.serverStateID;\n        return;\n\n      case \"tenantPreferencesID\":\n        draft.tenantPreferencesID = action.tenantPreferencesID;\n        return;\n\n      case \"savePageState\":\n        const response = axios.put(\"onboarding-states/\" + action.userID, {\n          data: {\n            user: action.userID,\n            route: action.route\n          },\n          headers: {\n            Authorization: \"Bearer \" + action.token\n          }\n        }).then(response => {}).catch(error => {\n          console.log(\"An error occurred:\", error.response);\n        });\n        return;\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n  return __jsx(React.Fragment, null, __jsx(StateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(DispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/vusa/Portfolio/Rental-Property-App/pages/_app.js"],"names":["React","useState","useReducer","useEffect","useImmerReducer","axios","StateContext","DispatchContext","defaults","baseURL","process","env","BACKENDURL","MyApp","Component","pageProps","storageItem","setStorageItem","isLoggedIn","localStorage","getItem","initialState","loggedIn","isSearchOpen","isChatOpen","unreadChatCount","serverStateID","ourReducer","draft","action","type","setItem","user","data","token","userID","removeItem","tenantPreferencesID","response","put","route","headers","Authorization","then","catch","error","console","log","state","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\nimport { useImmerReducer } from \"use-immer\";\nimport axios from \"axios\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"lato-font/css/lato-font.min.css\";\nimport \"../styles/main.css\";\n\nimport StateContext from \"./StateContext\";\nimport DispatchContext from \"./DispatchContext\";\n\naxios.defaults.baseURL = process.env.BACKENDURL || \"http://localhost:1337/\";\n\nfunction MyApp({ Component, pageProps }) {\n  const [storageItem, setStorageItem] = useState(\"\");\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    setStorageItem(isLoggedIn);\n  }, []);\n  const initialState = {\n    loggedIn: storageItem,\n    isSearchOpen: false,\n    isChatOpen: false,\n    unreadChatCount: 0,\n    serverStateID: null,\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case \"login\":\n        draft.loggedIn = true;\n        localStorage.setItem(\"loggedIn\", draft.loggedIn);\n        draft.user = action.data;\n        localStorage.setItem(\"user\", draft.user);\n        draft.token = action.token;\n        localStorage.setItem(\"token\", draft.token);\n        draft.userID = action.userID;\n        localStorage.setItem(\"userID\", draft.userID);\n        return;\n      case \"logout\":\n        draft.loggedIn = false;\n        localStorage.removeItem(\"loggedIn\");\n        return;\n      case \"serverStateID\":\n        draft.serverStateID = action.serverStateID;\n        return;\n      case \"tenantPreferencesID\":\n        draft.tenantPreferencesID = action.tenantPreferencesID;\n        return;\n      case \"savePageState\":\n        const response = axios\n          .put(\"onboarding-states/\" + action.userID, {\n            data: {\n              user: action.userID,\n              route: action.route,\n            },\n\n            headers: {\n              Authorization: \"Bearer \" + action.token,\n            },\n          })\n          .then((response) => {})\n          .catch((error) => {\n            console.log(\"An error occurred:\", error.response);\n          });\n        return;\n    }\n  }\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  return (\n    <>\n      <StateContext.Provider value={state}>\n        <DispatchContext.Provider value={dispatch}>\n          <Component {...pageProps} />\n        </DispatchContext.Provider>\n      </StateContext.Provider>\n    </>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}